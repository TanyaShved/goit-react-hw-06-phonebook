{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","components/Contacts/Contacts.module.css","components/IconButton/IconButton.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/Phonebook/Phonebook.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","components/IconButton/IconButton.jsx","icon/delete.svg","components/ContactsList/ContactsList.jsx","App.jsx","redux/contacts/contacts-redux.js","redux/store.js","index.jsx","components/Phonebook/Phonebook.module.css"],"names":["module","exports","contactsActions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","getContacts","state","contacts","items","getValue","filter","getFilteredContact","normalizedFilter","toLowerCase","contact","includes","Phonebook","title","useState","setName","setNumber","useSelector","dispatch","useDispatch","checkContactName","find","alert","className","s","onSubmit","e","preventDefault","container","textInput","type","value","placeholder","onChange","currentTarget","formInput","country","formInput_phone","addButton","Contacts","children","protoTypes","PropTypes","string","isRequired","node","Filter","IconButton","onClick","allyProps","defaultProps","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","fill","_ref3","SvgDelete","_ref","svgRef","titleId","props","xmlns","viewBox","ref","ForwardRef","ContactsList","list","map","aria-label","width","height","connect","itemsReducer","createReducer","filterReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","storage","blacklist","store","configureStore","reducer","persistReducer","contactsRedux","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.96d73a3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"Filter_textInput__34RNH\",\"formInput\":\"Filter_formInput__dCodg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2RiYd\",\"contact\":\"ContactsList_contact__2MNvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__34Twh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconButton\":\"IconButton_IconButton__3sU0k\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\n const addContact = createAction('contacts/add', (name, number) => ({\n    payload: {\n        id: uuidv4(),\n        name,\n        number,\n    }\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst contactsActions = { addContact, deleteContact, changeFilter };\n\nexport default contactsActions;\n\n\n\n\n\n// c использованием библиотек redux и  react-redux\n\n// import { v4 as uuidv4 } from 'uuid';\n// import types from './contacts-types';\n\n// const addContact = (name, number) => ({\n//     type: types.ADD,\n//     payload: {\n//         id: uuidv4(),\n//         name,\n//         number,\n//     }\n// });\n\n// const deleteContact = contactId => ({\n//     type: types.DELETE,\n//     payload: contactId,\n// });\n\n// const changeFilter = value => ({\n//     type: types.CHANGE_FILTER,\n//     payload: value,\n// })\n\n// const contsctsActions = { addContact, deleteContact, changeFilter };\n\n\n// export default contactsActions;","export const getContacts = state => state.contacts.items;\n\nexport const getValue = state => state.contacts.filter;\n\nexport const getFilteredContact = state => {\n    const contacts = getContacts(state);\n    const filter = getValue(state);\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n};\n\n\n","import PropTypes from 'prop-types';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport {  useSelector, useDispatch  } from 'react-redux';\nimport { useState } from 'react';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport {getContacts} from '../../redux/contacts/contacts-selectors';\nimport s from './Phonebook.module.css';\n\nconst Phonebook = ({ title }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handeleSubmit = e => {\n    e.preventDefault();\n\n    if (checkContactName()) {\n      return;\n    }\n     \n    if (name === '' || number === '') {\n    return alert('Please fill in the required fields!');\n    }\n\n    dispatch(contactsActions.addContact(name, number));\n    setName('');\n    setNumber('');\n  };\n\n  const checkContactName = () => {\n    const namesInPhonebook = contacts.find(contact => contact.name === name);\n\n    if (namesInPhonebook) {\n      alert(`${name} is already in contacts!`);\n      return true;\n    }\n  };\n\n  return (\n      <div>\n        <h2 className={s.title}>{title}</h2>\n        <form onSubmit={handeleSubmit} className={s.container}>\n          <label className={s.textInput}>\n            Name\n            <input\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              placeholder=\"Rosie Simpson\"\n              onChange={e => setName(e.currentTarget.value)}\n              className={s.formInput}\n            />\n          </label>\n          <label className={s.textInput}>\n            Number\n            <PhoneInput\n              country={'ua'}\n              value={number}\n              name=\"number\"\n              placeholder=\"4591256\"\n              onChange={setNumber}\n              className={s.formInput_phone}\n            />\n          </label>\n          <button type=\"submit\" className={s.addButton}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n}\n\nPhonebook.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Phonebook;\n\n\n\n\n// СТАРАЯ ВВЕРСИЯ\n\n// import PropTypes from 'prop-types';\n// import PhoneInput from 'react-phone-input-2';\n// import 'react-phone-input-2/lib/style.css';\n// import { connect } from 'react-redux';\n// import { useState } from 'react';\n// import contactsActions from '../../redux/contacts/contacts-actions';\n// import s from './Phonebook.module.css';\n\n// const Phonebook = ({ onSubmit, contacts, title }) => {\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n  \n//   const handeleSubmit = e => {\n//     e.preventDefault();\n\n//     if (checkContactName()) {\n//       return;\n//     }\n     \n//     if (name === '' || number === '') {\n//     onSubmit(name, number);\n//     setName('');\n//     setNumber('');\n//     }\n\n//     alert('Please fill in the required fields!');\n    \n//   };\n\n//   const checkContactName = () => {\n//     const namesInPhonebook = contacts.find(contact => contact.name === name);\n\n//     if (namesInPhonebook) {\n//       alert(`${name} is already in contacts!`);\n//       return true;\n//     }\n//   };\n\n//   return (\n//       <div>\n//         <h2 className={s.title}>{title}</h2>\n//         <form onSubmit={handeleSubmit} className={s.container}>\n//           <label className={s.textInput}>\n//             Name\n//             <input\n//               type=\"text\"\n//               value={name}\n//               name=\"name\"\n//               placeholder=\"Rosie Simpson\"\n//               onChange={e => setName(e.currentTarget.value)}\n//               className={s.formInput}\n//             />\n//           </label>\n//           <label className={s.textInput}>\n//             Number\n//             <PhoneInput\n//               country={'ua'}\n//               value={number}\n//               name=\"number\"\n//               placeholder=\"4591256\"\n//               onChange={setNumber}\n//               className={s.formInput_phone}\n//             />\n//           </label>\n//           <button type=\"submit\" className={s.addButton}>\n//             Add contact\n//           </button>\n//         </form>\n//       </div>\n//     );\n// }\n\n// Phonebook.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n//   title: PropTypes.string.isRequired,\n//   contacts: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.string.isRequired,\n//       }),\n//     ),\n// };\n\n// const mapStateToProps = state => ({\n//   contacts: state.contacts.items\n// });\n\n// const mapDispatchToProps = dispatch => ({\n// onSubmit: (name, number) => dispatch(contactsActions.addContact(name, number)),\n// })\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nconst Contacts = ({ title, children }) => {\n  return (\n    <div>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nContacts.protoTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Contacts;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport { getValue } from '../../redux/contacts/contacts-selectors';\nimport s from './Filter.module.css';\n\nconst Filter = ({ title }) => {\n  const value = useSelector(getValue);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <label className={s.textInput}>\n        {title}\n        <input\n          type=\"text\"\n          value={value}\n          onChange={e => dispatch(contactsActions.changeFilter(e.currentTarget.value))}\n          className={s.formInput}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.protoTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n\n\n\n// СТАРАЯ ВВЕРСИЯ\n\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import contactsActions from '../../redux/contacts/contacts-actions';\n// import s from './Filter.module.css';\n\n// const Filter = ({ title, value, onChange }) => {\n//   return (\n//     <div>\n//       <label className={s.textInput}>\n//         {title}\n//         <input\n//           type=\"text\"\n//           value={value}\n//           onChange={onChange}\n//           className={s.formInput}\n//         />\n//       </label>\n//     </div>\n//   );\n// };\n\n// Filter.protoTypes = {\n//   title: PropTypes.string.isRequired,\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.string.isRequired,\n// };\n\n// const mapStateToProps = state => ({\n//   value: state.contacts.filter\n// });\n\n// const mapDispatchToProps = dispatch => ({\n// onChange: (e) => dispatch(contactsActions.changeFilter(e.currentTarget.value)),\n// })\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport s from './IconButton.module.css';\n\nconst IconButton = ({ children, onClick, ...allyProps }) => (\n  <button\n    type=\"button\"\n    className={s.IconButton}\n    onClick={onClick}\n    {...allyProps}\n  >\n    {children}\n  </button>\n);\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nIconButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string.isRequired,\n};\n\nexport default IconButton;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n});\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.5575697b.svg\";\nexport { ForwardRef as ReactComponent };","import IconButton from '../IconButton/IconButton';\nimport { useSelector, useDispatch} from 'react-redux';\nimport { ReactComponent as DeleteIcon } from '../../icon/delete.svg';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport { getFilteredContact } from '../../redux/contacts/contacts-selectors';\nimport s from './ContactsList.module.css';\n\n\nconst ContactsList = () => {\nconst contacts = useSelector(getFilteredContact);\nconst dispatch = useDispatch();\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contact}>\n          {name}: {number}\n          <IconButton\n            onClick={() => dispatch(contactsActions.deleteContact(id))}\n            aria-label=\"Delete contact\"\n          >\n            <DeleteIcon width=\"30\" height=\"30\" />\n          </IconButton>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n\n\n\n\n// СТАРАЯ ВВЕРСИЯ\n\n// import PropTypes from 'prop-types';\n// import IconButton from '../IconButton/IconButton';\n// import { connect } from 'react-redux';\n// import { ReactComponent as DeleteIcon } from '../../icon/delete.svg';\n// import contactsActions from '../../redux/contacts/contacts-actions';\n// import s from './ContactsList.module.css';\n\n// const ContactsList = ({ contacts, onDeleteContact }) => {\n//   return (\n//     <ul className={s.list}>\n//       {contacts.map(({ id, name, number }) => (\n//         <li key={id} className={s.contact}>\n//           {name}: {number}\n//           <IconButton\n//             onClick={() => onDeleteContact(id)}\n//             aria-label=\"Delete contact\"\n//           >\n//             <DeleteIcon width=\"30\" height=\"30\" />\n//           </IconButton>\n//         </li>\n//       ))}\n//     </ul>\n//   );\n// };\n\n// ContactsList.protoTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//     }),\n//   ).isRequired,\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n\n// const getFilteredContact = (allContacts, filter) => {\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return allContacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n\n// const mapStateToProps = ({ contacts: {items, filter} }) => ({\n//     contacts: getFilteredContact(items, filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n// onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\n// })\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import { connect } from 'react-redux';\nimport Pnonebook from './components/Phonebook/Phonebook';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport ContactsList from './components/ContactsList/ContactsList';\n\nconst App = () => {\n  return (\n      <>\n        <Pnonebook\n          title=\"Pnonebook\"\n        />\n        <Contacts title=\"Contacts\">\n          <Filter\n            title=\"Find contacts by name\"\n          />\n          <ContactsList/>\n        </Contacts> \n      </>\n    );\n}\n\nexport default connect()(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './contacts-actions';\n\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst itemsReducer = createReducer(initialContacts, {\n    [contactsActions.addContact]: (state, { payload }) => [...state, payload],\n    [contactsActions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n    [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n    items: itemsReducer,\n    filter: filterReducer,\n})\n\n\n\n\n\n// c использованием библиотек redux и  react-redux\n\n// import { combineReducers } from 'redux';\n// import types from './contacts-types';\n\n// const initialContacts = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\n// const itemsReducer = (state = initialContacts, { type, payload }) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload];\n        \n//         case types.DELETE:\n//             return state.filter(({ id }) => id !== payload)\n        \n//         default:\n//             return state;\n//     }\n    \n// };\n\n// const filterReducer = (state = '', { type, payload }) => {\n//     switch (type) {\n//         case types.CHANGE_FILTER:\n//             return payload;\n        \n//         default:\n//             return state;\n//     }\n// };\n\n// export default combineReducers({\n//     items: itemsReducer,\n//     filter: filterReducer,\n// })","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport contactsRedux from './contacts/contacts-redux';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\n export const store = configureStore({\n  reducer: {\n  contacts: persistReducer(contactsPersistConfig,contactsRedux),\n},\n   middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n export const persistor = persistStore(store);\n\n\n\n\n\n// c использованием библиотек redux и  react-redux\n\n// import { createStore } from 'redux';\n// import { combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import contactsRedux from './contacts/contacts-redux';\n\n// const rootReducer = combineReducers({\n//   contacts: contactsRedux,\n// })\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n        </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__OJYud\",\"container\":\"Phonebook_container__Yb216\",\"textInput\":\"Phonebook_textInput__39_1s\",\"formInput\":\"Phonebook_formInput__5nfaD\",\"addButton\":\"Phonebook_addButton__31JzT\"};"],"sourceRoot":""}